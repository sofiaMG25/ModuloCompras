/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.PedidoDetalle;

import DAOs.DAOPedidoDetalleImp;
import DAOs.PedidoDetalle;
import MainPrincipal.Main;
import java.awt.BorderLayout;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Manuel
 */
public class modificarPedidoDetalle extends javax.swing.JPanel {

    /**
     * Creates new form modificarEmpaque
     */
    private Main mainPrincipal;

    public modificarPedidoDetalle() {
        initComponents();
    }

    public void setMainPrincipal(Main main) {
        mainPrincipal = main;
    }

    public void ObtenerLaboratoriModificar(PedidoDetalle pro) {
        idtxtUPro.setText("" + pro.getIdPedidoDetalle());
        txtCantPedido.setText(String.valueOf(pro.getCantPedida()));
        txtPrecioCompra.setText(String.valueOf(pro.getPrecioCompra()));
        txtSubtotal.setText("" + pro.getSubtotal());
        txtCantRech.setText("" + pro.getCantRechazada());
        txtCantReci.setText("" + pro.getCantRecibida());
        txtCantAcep.setText(String.valueOf(pro.getCantAceptada()));
        if (pro.getEstatus() == 'A') {
            this.txtEstatus.setSelectedIndex(1);
        } else {
            this.txtEstatus.setSelectedIndex(2);
        }
        LinkedList<PedidoDetalle> listaPro = new DAOs.DAOPedidoDetalleImp().obternerIdPedido();
        DefaultComboBoxModel model = (DefaultComboBoxModel) txtPedido.getModel();
        for (int i = 0; i < listaPro.size(); i++) {
            model.addElement(listaPro.get(i).getIdPedido());
        }
        txtPedido.setModel(model);
        for (int i = 0; i < listaPro.size(); i++) {
            txtPedido.setSelectedIndex(i);
            if (txtPedido.getSelectedItem().toString().equals(pro.getIdPedido())) {
                this.txtPedido.setSelectedIndex(i);
                break;
            }
        }
        LinkedList<PedidoDetalle> listaPro2 = new DAOs.DAOPedidoDetalleImp().obternerIdPresentacion();
        DefaultComboBoxModel model2 = (DefaultComboBoxModel) txtPresentacion.getModel();
        for (int i = 0; i < listaPro2.size(); i++) {
            model2.addElement(listaPro2.get(i).getIdPresentacion());
        }
        txtPresentacion.setModel(model2);
        for (int i = 0; i < listaPro2.size(); i++) {
            txtPresentacion.setSelectedIndex(i);
            if (pro.getIdPresentacion().equals(txtPresentacion.getSelectedItem().toString())) {
                break;
            }
        }

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEstatus = new javax.swing.JComboBox<>();
        idtxtUPro = new javax.swing.JTextField();
        txtCantPedido = new javax.swing.JTextField();
        idUEmp = new javax.swing.JLabel();
        nombreUEmp = new javax.swing.JLabel();
        origenUEmp = new javax.swing.JLabel();
        estatusEmp = new javax.swing.JLabel();
        txtSubtotal = new javax.swing.JTextField();
        estatusUEmp = new javax.swing.JLabel();
        txtPedido = new javax.swing.JComboBox<>();
        opcionesUEmp = new javax.swing.JPanel();
        modificarUPedDet = new javax.swing.JLabel();
        cancelarUPedDet = new javax.swing.JLabel();
        origenUEmp1 = new javax.swing.JLabel();
        origenUEmp2 = new javax.swing.JLabel();
        origenUEmp3 = new javax.swing.JLabel();
        origenUEmp5 = new javax.swing.JLabel();
        origenUEmp8 = new javax.swing.JLabel();
        txtPresentacion = new javax.swing.JComboBox<>();
        txtCantRech = new javax.swing.JTextField();
        txtCantAcep = new javax.swing.JTextField();
        txtCantReci = new javax.swing.JTextField();
        txtPrecioCompra = new javax.swing.JTextField();

        setBackground(new java.awt.Color(228, 225, 225));
        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true), "Modificar producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        txtEstatus.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtEstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE UNA OPCIÓN", "ACTIVO", "INACTIVO" }));

        idtxtUPro.setEnabled(false);

        idUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idUEmp.setText("ID:");

        nombreUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        nombreUEmp.setText("CANT PEDIDA:");

        origenUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        origenUEmp.setText("PRECIOCOMPRA:");

        estatusEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        estatusEmp.setText("ESTATUS:");

        estatusUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        estatusUEmp.setText("ID PEDIDO:");

        txtPedido.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPedido.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE UNA OPCIÓN" }));

        opcionesUEmp.setBackground(new java.awt.Color(48, 45, 45));

        modificarUPedDet.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 2, 18)); // NOI18N
        modificarUPedDet.setForeground(new java.awt.Color(255, 255, 255));
        modificarUPedDet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save.png"))); // NOI18N
        modificarUPedDet.setText("MODIFICAR");
        modificarUPedDet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        modificarUPedDet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modificarUPedDet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modificarUPedDetMouseClicked(evt);
            }
        });

        cancelarUPedDet.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 2, 18)); // NOI18N
        cancelarUPedDet.setForeground(new java.awt.Color(255, 255, 255));
        cancelarUPedDet.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar.png"))); // NOI18N
        cancelarUPedDet.setText("CANCELAR");
        cancelarUPedDet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        cancelarUPedDet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelarUPedDet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelarUPedDetMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout opcionesUEmpLayout = new javax.swing.GroupLayout(opcionesUEmp);
        opcionesUEmp.setLayout(opcionesUEmpLayout);
        opcionesUEmpLayout.setHorizontalGroup(
            opcionesUEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesUEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modificarUPedDet, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelarUPedDet, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        opcionesUEmpLayout.setVerticalGroup(
            opcionesUEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesUEmpLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(opcionesUEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modificarUPedDet)
                    .addComponent(cancelarUPedDet))
                .addContainerGap())
        );

        origenUEmp1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        origenUEmp1.setText("SUBTOTAL:");

        origenUEmp2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        origenUEmp2.setText("CANT RECIBIDA:");

        origenUEmp3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        origenUEmp3.setText("CANT RECHAZADA:");

        origenUEmp5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        origenUEmp5.setText("CANT ACEPTADA:");

        origenUEmp8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        origenUEmp8.setText("ID PRESENTACIÓN:");

        txtPresentacion.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtPresentacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE UNA OPCIÓN" }));

        txtPrecioCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioCompraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreUEmp)
                            .addComponent(idUEmp)
                            .addComponent(origenUEmp, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idtxtUPro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(txtPrecioCompra)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(origenUEmp3)
                            .addComponent(origenUEmp1)
                            .addComponent(origenUEmp2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCantRech, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                            .addComponent(txtCantAcep)
                            .addComponent(txtCantReci)
                            .addComponent(txtSubtotal))))
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(213, 213, 213))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(origenUEmp8)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(estatusEmp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(estatusUEmp))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(opcionesUEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(origenUEmp5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idUEmp)
                    .addComponent(idtxtUPro, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estatusEmp)
                    .addComponent(txtEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreUEmp)
                    .addComponent(txtCantPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estatusUEmp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(origenUEmp8)
                        .addGap(0, 0, 0)
                        .addComponent(txtPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(origenUEmp)
                            .addComponent(txtPrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(origenUEmp1)
                            .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(origenUEmp3)
                    .addComponent(txtCantRech, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(origenUEmp2)
                    .addComponent(txtCantReci, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(origenUEmp5)
                    .addComponent(txtCantAcep, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(opcionesUEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("Modificar Productos");
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarUPedDetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarUPedDetMouseClicked
        mainPrincipal.getworkSpace().removeAll();
        mostrarPedidoDetalle mostrarPro = new mostrarPedidoDetalle();
        mostrarPro.setSize(mainPrincipal.getworkSpace().getSize());
        mostrarPro.setVisible(true);
        mostrarPro.activeEventListenerMostrarEmp();
        mainPrincipal.getworkSpace().add(mostrarPro, BorderLayout.CENTER);
        mainPrincipal.getworkSpace().revalidate();
        mainPrincipal.getworkSpace().repaint();
        mostrarPro.setMostrarPedidoDetalle(mainPrincipal);


    }//GEN-LAST:event_cancelarUPedDetMouseClicked

    private void modificarUPedDetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modificarUPedDetMouseClicked
        if (txtCantPedido.getText().equals("") || Float.parseFloat(txtCantPedido.getText()) <1000) {
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad valida", "Error", JOptionPane.ERROR_MESSAGE);
            txtCantPedido.requestFocus();
        }
        try {
            if (txtSubtotal.getText().equals("")||Float.parseFloat(txtCantRech.getText()) <= 0) {
                JOptionPane.showMessageDialog(this, "Ingrese una cantidad valida", "Error", JOptionPane.ERROR_MESSAGE);
                txtSubtotal.requestFocus();
            } else if (txtCantRech.getText().equals("") || Float.parseFloat(txtCantRech.getText()) < 0) {
                JOptionPane.showMessageDialog(this, "Ingrese una cantidad valida", "Error", JOptionPane.ERROR_MESSAGE);
                txtCantRech.requestFocus();
            } else if (txtCantReci.getText().equals("") || Float.parseFloat(txtCantReci.getText()) <= 0) {
                JOptionPane.showMessageDialog(this, "Ingrese una cantidad valida", "Error", JOptionPane.ERROR_MESSAGE);
                txtCantReci.requestFocus();
            } else if (txtCantAcep.getText().equals("") || Float.parseFloat(txtCantAcep.getText())< 0) {
                JOptionPane.showMessageDialog(this, "Ingrese una cantidad valida", "Error", JOptionPane.ERROR_MESSAGE);
                txtCantAcep.requestFocus();
            } else if (txtEstatus.getSelectedIndex() <= 0) {
                JOptionPane.showMessageDialog(this, "Elija un estatus válido ", "Error", JOptionPane.ERROR_MESSAGE);
                txtPedido.requestFocus();
            } else if (txtPedido.getSelectedIndex() <= 0) {
                JOptionPane.showMessageDialog(this, "Elija un pedido válido ", "Error", JOptionPane.ERROR_MESSAGE);
                txtPedido.requestFocus();
            } else if (txtPresentacion.getSelectedIndex() <= 0) {
                JOptionPane.showMessageDialog(this, "Elija una presentación valida ", "Error", JOptionPane.ERROR_MESSAGE);
                txtPresentacion.requestFocus();
            } else {
                DAOPedidoDetalleImp guardarPro = new DAOPedidoDetalleImp();
                //Datos obtenidos de los campos 
                int id = Integer.parseInt(this.idtxtUPro.getText());
                int cantPed = Integer.parseInt(this.txtCantPedido.getText());
                float precioCom = Float.parseFloat(this.txtPrecioCompra.getText());
                float subtotal = Float.parseFloat(this.txtSubtotal.getText());
                int cantReci = Integer.parseInt(this.txtCantReci.getText());
                int cantRecha= Integer.parseInt(this.txtCantRech.getText());
                float cantAcep= Float.parseFloat(this.txtCantAcep.getText());
                char estatus = String.valueOf(this.txtEstatus.getSelectedItem()).charAt(0);
                String pedido = this.txtPedido.getSelectedItem().toString();
                String presentacion = this.txtPresentacion.getSelectedItem().toString();
                //Guardar los datos de laboratorio
                guardarPro.upadate(new PedidoDetalle(id, cantPed, 
                        precioCom, subtotal, cantReci, cantRecha, 
                        cantAcep, estatus, pedido, presentacion));
                limpiarVariables();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

    }//GEN-LAST:event_modificarUPedDetMouseClicked

    private void txtPrecioCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioCompraActionPerformed

    private void limpiarVariables() {
        idtxtUPro.setText("");
        txtCantPedido.setText("");
        txtSubtotal.setText("");
        txtCantRech.setText("");
        txtCantReci.setText("");
        txtCantAcep.setText("");
        txtCantAcep.setText("");
        txtEstatus.setSelectedIndex(0);
        txtPresentacion.setSelectedIndex(0);
        txtPedido.setSelectedIndex(0);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cancelarUPedDet;
    private javax.swing.JLabel estatusEmp;
    private javax.swing.JLabel estatusUEmp;
    private javax.swing.JLabel idUEmp;
    private javax.swing.JTextField idtxtUPro;
    private javax.swing.JLabel modificarUPedDet;
    private javax.swing.JLabel nombreUEmp;
    private javax.swing.JPanel opcionesUEmp;
    private javax.swing.JLabel origenUEmp;
    private javax.swing.JLabel origenUEmp1;
    private javax.swing.JLabel origenUEmp2;
    private javax.swing.JLabel origenUEmp3;
    private javax.swing.JLabel origenUEmp5;
    private javax.swing.JLabel origenUEmp8;
    private javax.swing.JTextField txtCantAcep;
    private javax.swing.JTextField txtCantPedido;
    private javax.swing.JTextField txtCantRech;
    private javax.swing.JTextField txtCantReci;
    private javax.swing.JComboBox<String> txtEstatus;
    private javax.swing.JComboBox<String> txtPedido;
    private javax.swing.JTextField txtPrecioCompra;
    private javax.swing.JComboBox<String> txtPresentacion;
    private javax.swing.JTextField txtSubtotal;
    // End of variables declaration//GEN-END:variables
}
