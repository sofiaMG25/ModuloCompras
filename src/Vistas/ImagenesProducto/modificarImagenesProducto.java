/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.ImagenesProducto;

import DAOs.DAOImagenesProducto;
import DAOs.DAOImagenesProductoImp;
import DAOs.DAOPedidoDetalleImp;
import DAOs.ImagenesProducto;
import DAOs.PedidoDetalle;
import MainPrincipal.Main;
import java.awt.BorderLayout;
import java.awt.Image;
import java.io.File;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Manuel
 */
public class modificarImagenesProducto extends javax.swing.JPanel {

    /**
     * Creates new form modificarEmpaque
     */
    private Main mainPrincipal;

    public modificarImagenesProducto() {
        initComponents();
    }

    public void setMainPrincipal(Main main) {
        mainPrincipal = main;
    }

    public void ObtenerLaboratoriModificar(ImagenesProducto pro) {
        idtxtUImgPro.setText("" + pro.getIdImagen());
        txtNombreImg.setText(String.valueOf(pro.getNombreImagen()));
        labImagen.setText(String.valueOf(pro.getIdImagen()));
        txtPrincipal.setText("" + pro.getPrincipal());
        if (pro.getEstatus() == 'A') {
            this.txtEstatus.setSelectedIndex(1);
        } else {
            this.txtEstatus.setSelectedIndex(2);
        }
        LinkedList<ImagenesProducto> listaPro = new DAOs.DAOImagenesProductoImp().obternerIdProducto();
        DefaultComboBoxModel model = (DefaultComboBoxModel) txtProducto.getModel();
        for (int i = 0; i < listaPro.size(); i++) {
            model.addElement(listaPro.get(i).getIdProducto());
        }
        txtProducto.setModel(model);
        for (int i = 0; i < listaPro.size(); i++) {
            txtProducto.setSelectedIndex(i);
            if (txtProducto.getSelectedItem().toString().equals(pro.getIdProducto())) {
                this.txtProducto.setSelectedIndex(i);
                break;
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEstatus = new javax.swing.JComboBox<>();
        idtxtUImgPro = new javax.swing.JTextField();
        txtNombreImg = new javax.swing.JTextField();
        idUEmp = new javax.swing.JLabel();
        nombreUEmp = new javax.swing.JLabel();
        origenUEmp = new javax.swing.JLabel();
        estatusEmp = new javax.swing.JLabel();
        txtPrincipal = new javax.swing.JTextField();
        estatusUEmp = new javax.swing.JLabel();
        txtProducto = new javax.swing.JComboBox<>();
        opcionesUEmp = new javax.swing.JPanel();
        modificarUImgPro = new javax.swing.JLabel();
        cancelarUImgPro = new javax.swing.JLabel();
        origenUEmp1 = new javax.swing.JLabel();
        cargar = new javax.swing.JButton();
        labImagen = new javax.swing.JLabel();

        setBackground(new java.awt.Color(228, 225, 225));
        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true), "Modificar producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        txtEstatus.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtEstatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE UNA OPCIÓN", "ACTIVO", "INACTIVO" }));

        idtxtUImgPro.setEnabled(false);

        txtNombreImg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreImgKeyPressed(evt);
            }
        });

        idUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        idUEmp.setText("ID:");

        nombreUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        nombreUEmp.setText("NOMBRE IMAGEN:");

        origenUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        origenUEmp.setText("IMAGEN:");

        estatusEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        estatusEmp.setText("ESTATUS:");

        txtPrincipal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrincipalKeyPressed(evt);
            }
        });

        estatusUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        estatusUEmp.setText("ID PRODUCTO:");

        txtProducto.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE UNA OPCIÓN" }));

        opcionesUEmp.setBackground(new java.awt.Color(48, 45, 45));

        modificarUImgPro.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 2, 18)); // NOI18N
        modificarUImgPro.setForeground(new java.awt.Color(255, 255, 255));
        modificarUImgPro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save.png"))); // NOI18N
        modificarUImgPro.setText("MODIFICAR");
        modificarUImgPro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        modificarUImgPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modificarUImgPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modificarUImgProMouseClicked(evt);
            }
        });

        cancelarUImgPro.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 2, 18)); // NOI18N
        cancelarUImgPro.setForeground(new java.awt.Color(255, 255, 255));
        cancelarUImgPro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar.png"))); // NOI18N
        cancelarUImgPro.setText("CANCELAR");
        cancelarUImgPro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        cancelarUImgPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelarUImgPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelarUImgProMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout opcionesUEmpLayout = new javax.swing.GroupLayout(opcionesUEmp);
        opcionesUEmp.setLayout(opcionesUEmpLayout);
        opcionesUEmpLayout.setHorizontalGroup(
            opcionesUEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesUEmpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(modificarUImgPro, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelarUImgPro, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
        opcionesUEmpLayout.setVerticalGroup(
            opcionesUEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesUEmpLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(opcionesUEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modificarUImgPro)
                    .addComponent(cancelarUImgPro))
                .addContainerGap())
        );

        origenUEmp1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        origenUEmp1.setText("PRINCIPAL:");

        cargar.setText("Cargar imagen");
        cargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cargarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(nombreUEmp)
                                        .addComponent(idUEmp))
                                    .addGap(21, 21, 21))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(origenUEmp)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(origenUEmp1)
                                .addGap(81, 81, 81)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(idtxtUImgPro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNombreImg, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                    .addComponent(labImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cargar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(estatusEmp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(estatusUEmp)
                            .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 138, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(opcionesUEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idUEmp)
                    .addComponent(idtxtUImgPro, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estatusEmp)
                    .addComponent(txtEstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreUEmp)
                    .addComponent(txtNombreImg, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(estatusUEmp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labImagen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(origenUEmp)
                        .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cargar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(origenUEmp1)
                    .addComponent(txtPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(opcionesUEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("Modificar Productos");
    }// </editor-fold>//GEN-END:initComponents

    private void cancelarUImgProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarUImgProMouseClicked
        mainPrincipal.getworkSpace().removeAll();
        mostrarImagenesproducto mostrarPro = new mostrarImagenesproducto();
        mostrarPro.setSize(mainPrincipal.getworkSpace().getSize());
        mostrarPro.setVisible(true);
        mostrarPro.activeEventListenerMostrarEmp();
        mainPrincipal.getworkSpace().add(mostrarPro, BorderLayout.CENTER);
        mainPrincipal.getworkSpace().revalidate();
        mainPrincipal.getworkSpace().repaint();
        mostrarPro.setMostrarPedidoDetalle(mainPrincipal);


    }//GEN-LAST:event_cancelarUImgProMouseClicked

    private void modificarUImgProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modificarUImgProMouseClicked
        if (txtNombreImg.getText().equals("") || Float.parseFloat(txtNombreImg.getText()) > 1000) {
            JOptionPane.showMessageDialog(this, "Ingrese un nombre válido", "Error", JOptionPane.ERROR_MESSAGE);
            txtNombreImg.requestFocus();
        }
        try {
            if (txtPrincipal.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Ingrese un carácter válido", "Error", JOptionPane.ERROR_MESSAGE);
                txtPrincipal.requestFocus();
            } else if (txtEstatus.getSelectedIndex() < 0) {
                JOptionPane.showMessageDialog(this, "Elija un estatus válido ", "Error", JOptionPane.ERROR_MESSAGE);
                txtProducto.requestFocus();
            } else if (txtProducto.getSelectedIndex() < 0) {
                JOptionPane.showMessageDialog(this, "Elija un producto válido ", "Error", JOptionPane.ERROR_MESSAGE);
                txtProducto.requestFocus();
            } else {
                DAOImagenesProductoImp guardarPro = new DAOImagenesProductoImp();
                //Datos obtenidos de los campos 
                int id = Integer.parseInt(this.idtxtUImgPro.getText());
                String nombImagen = (this.txtNombreImg.getText());
                //byte[] imagen = (this.txtImagen.getText()).getBytes();
                byte[] imagen = (this.labImagen.getText()).getBytes();
                char principal = (this.txtPrincipal.getText()).charAt(0);
                char estatus = String.valueOf(this.txtEstatus.getSelectedItem()).charAt(0);
                String producto = (this.txtProducto.getSelectedItem().toString());
                //Guardar los datos de laboratorio
                guardarPro.upadate(new ImagenesProducto(id, nombImagen,
                        imagen, principal, estatus, producto));
                limpiarVariables();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

    }//GEN-LAST:event_modificarUImgProMouseClicked
    File fichero;
    private void cargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargarMouseClicked
        int resultado;

        cargarFoto ventana = new cargarFoto();

        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG y PNG", "jpg", "png");

        Vistas.ImagenesProducto.cargarFoto.jfchCargarfoto.setFileFilter(filtro);

        resultado = ventana.jfchCargarfoto.showOpenDialog(null);

        if (JFileChooser.APPROVE_OPTION == resultado) {

            fichero = ventana.jfchCargarfoto.getSelectedFile();

            try {

                ImageIcon icon = new ImageIcon(fichero.toString());

                Icon icono = new ImageIcon(icon.getImage().getScaledInstance(labImagen.getWidth(),
                        labImagen.getHeight(), Image.SCALE_DEFAULT));

                labImagen.setText(null);

                labImagen.setIcon(icono);

            } catch (Exception ex) {

                JOptionPane.showMessageDialog(null, "Error abriendo la                   imagen " + ex);

            }
        }
    }//GEN-LAST:event_cargarMouseClicked

    private void txtNombreImgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreImgKeyPressed
        if (txtNombreImg.getText().length()==100) {
                JOptionPane.showMessageDialog(this, "Ingrese menos de 100 carácteres", "Error", JOptionPane.ERROR_MESSAGE);
                txtNombreImg.requestFocus();
                evt.consume();
            
            }
    }//GEN-LAST:event_txtNombreImgKeyPressed

    private void txtPrincipalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrincipalKeyPressed
        if ( txtPrincipal.getText().length()==1) {
                JOptionPane.showMessageDialog(this, "Ingrese sólo un carácter.", "Error", JOptionPane.ERROR_MESSAGE);
                txtPrincipal.requestFocus();
                evt.consume();
            
            }
    }//GEN-LAST:event_txtPrincipalKeyPressed

    

    private void limpiarVariables() {
        idtxtUImgPro.setText("");
        txtNombreImg.setText("");
        txtPrincipal.setText("");
        txtEstatus.setSelectedIndex(0);
        txtProducto.setSelectedIndex(0);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cancelarUImgPro;
    private javax.swing.JButton cargar;
    private javax.swing.JLabel estatusEmp;
    private javax.swing.JLabel estatusUEmp;
    private javax.swing.JLabel idUEmp;
    private javax.swing.JTextField idtxtUImgPro;
    private javax.swing.JLabel labImagen;
    private javax.swing.JLabel modificarUImgPro;
    private javax.swing.JLabel nombreUEmp;
    private javax.swing.JPanel opcionesUEmp;
    private javax.swing.JLabel origenUEmp;
    private javax.swing.JLabel origenUEmp1;
    private javax.swing.JComboBox<String> txtEstatus;
    private javax.swing.JTextField txtNombreImg;
    private javax.swing.JTextField txtPrincipal;
    private javax.swing.JComboBox<String> txtProducto;
    // End of variables declaration//GEN-END:variables
}
