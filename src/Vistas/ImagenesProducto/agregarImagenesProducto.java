/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas.ImagenesProducto;

import DAOs.DAOImagenesProductoImp;
import DAOs.DAOPedidoDetalleImp;
import DAOs.ImagenesProducto;
import DAOs.PedidoDetalle;
import java.awt.BorderLayout;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import MainPrincipal.Main;
import java.awt.Image;
import java.io.File;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author 52351
 */
public class agregarImagenesProducto extends javax.swing.JPanel {

    /**
     * Creates new form agregarEmpaque
     */
    public agregarImagenesProducto() {
        initComponents();
        mostrarProductos();
        
    }

    private void mostrarProductos() {
        LinkedList<ImagenesProducto> productosLab = new DAOImagenesProductoImp().obternerIdProducto();
        DefaultComboBoxModel model = (DefaultComboBoxModel) txtProducto.getModel();
        for (int i = 0; i < productosLab.size(); i++) {
            model.addElement(productosLab.get(i).getIdProducto());
            System.out.println(productosLab.get(i).getIdProducto());
        }
        txtProducto.setModel(model);
    }
    
    
    private Main mainPrincipal;

    public void setMainPrincipal(Main main) {
        mainPrincipal = main;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opcionesAEmp = new javax.swing.JPanel();
        cancelarAImgPro = new javax.swing.JLabel();
        guardarAImgPro = new javax.swing.JLabel();
        txtNombImagen = new javax.swing.JTextField();
        origenUEmp1 = new javax.swing.JLabel();
        nombreUEmp = new javax.swing.JLabel();
        origenUEmp = new javax.swing.JLabel();
        txtPrincipal = new javax.swing.JTextField();
        estatusUEmp = new javax.swing.JLabel();
        txtProducto = new javax.swing.JComboBox<>();
        cargar = new javax.swing.JButton();
        labImagen = new javax.swing.JLabel();

        setBackground(new java.awt.Color(228, 225, 225));
        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true), "Agregar ImagenesProducto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        opcionesAEmp.setBackground(new java.awt.Color(48, 45, 45));

        cancelarAImgPro.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 2, 18)); // NOI18N
        cancelarAImgPro.setForeground(new java.awt.Color(255, 255, 255));
        cancelarAImgPro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar.png"))); // NOI18N
        cancelarAImgPro.setText("CANCELAR");
        cancelarAImgPro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        cancelarAImgPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelarAImgPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelarAImgProMouseClicked(evt);
            }
        });

        guardarAImgPro.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 2, 18)); // NOI18N
        guardarAImgPro.setForeground(new java.awt.Color(255, 255, 255));
        guardarAImgPro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save.png"))); // NOI18N
        guardarAImgPro.setText("GUARDAR ");
        guardarAImgPro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        guardarAImgPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        guardarAImgPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarAImgProMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                guardarAImgProMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout opcionesAEmpLayout = new javax.swing.GroupLayout(opcionesAEmp);
        opcionesAEmp.setLayout(opcionesAEmpLayout);
        opcionesAEmpLayout.setHorizontalGroup(
            opcionesAEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesAEmpLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(guardarAImgPro, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 282, Short.MAX_VALUE)
                .addComponent(cancelarAImgPro, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        opcionesAEmpLayout.setVerticalGroup(
            opcionesAEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesAEmpLayout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(opcionesAEmpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarAImgPro)
                    .addComponent(cancelarAImgPro))
                .addContainerGap())
        );

        txtNombImagen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombImagenKeyPressed(evt);
            }
        });

        origenUEmp1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        origenUEmp1.setText("PRINCIPAL:");

        nombreUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        nombreUEmp.setText("NOMBRE IMAGEN:");

        origenUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        origenUEmp.setText("IMAGEN:");

        txtPrincipal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrincipalKeyPressed(evt);
            }
        });

        estatusUEmp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        estatusUEmp.setText("ID PRODUCTO:");

        txtProducto.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtProducto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE UNA OPCIÃ“N" }));

        cargar.setText("Cargar imagen");
        cargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cargarMouseClicked(evt);
            }
        });
        cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(opcionesAEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nombreUEmp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(txtNombImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(origenUEmp1)
                            .addComponent(origenUEmp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                            .addComponent(labImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(18, 21, Short.MAX_VALUE)
                .addComponent(cargar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(estatusUEmp)
                    .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombreUEmp)
                            .addComponent(estatusUEmp)
                            .addComponent(txtNombImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(origenUEmp)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labImagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(2, 2, 2))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cargar)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(origenUEmp1)
                    .addComponent(txtPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(opcionesAEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        getAccessibleContext().setAccessibleName("Agregar ImagenesProducto");
    }// </editor-fold>//GEN-END:initComponents

    private void guardarAImgProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarAImgProMouseClicked
        if (txtNombImagen.getText().equals("") ) {
            JOptionPane.showMessageDialog(this, "Ingrese un nombre vÃ¡lido", "Error", JOptionPane.ERROR_MESSAGE);
            txtNombImagen.requestFocus();
        }
            if (txtPrincipal.getText().equals("") ) {
                JOptionPane.showMessageDialog(this, "Ingrese un carÃ¡cter vÃ¡lido", "Error", JOptionPane.ERROR_MESSAGE);
                txtPrincipal.requestFocus();
                
            
            } else if (txtProducto.getSelectedIndex() <= 0) {
                JOptionPane.showMessageDialog(this, "Elija un producto vÃ¡lido ", "Error", JOptionPane.ERROR_MESSAGE);
                txtProducto.requestFocus();
            
            } else {
            
                new DAOImagenesProductoImp().Insert(new ImagenesProducto(
                0,(txtNombImagen.getText()),(labImagen.getText()).getBytes(),
                (txtPrincipal.getText()).charAt(0),'A',
                (txtProducto.getSelectedItem().toString())
                ));
                
                limpiarVariables();
            
        }

    }//GEN-LAST:event_guardarAImgProMouseClicked

    private void cancelarAImgProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarAImgProMouseClicked
        mainPrincipal.getworkSpace().removeAll();
        mostrarImagenesproducto mostrarPro = new mostrarImagenesproducto();
        mostrarPro.setSize(mainPrincipal.getworkSpace().getSize());
        mostrarPro.setVisible(true);
        mostrarPro.setMostrarPedidoDetalle(mainPrincipal);
        mostrarPro.MostrarDatosPedidoDetalle();
        mainPrincipal.getworkSpace().add(mostrarPro, BorderLayout.CENTER);
        mainPrincipal.getworkSpace().revalidate();
        mainPrincipal.getworkSpace().repaint();

    }//GEN-LAST:event_cancelarAImgProMouseClicked

    private void limpiarVariables(){
        txtNombImagen.setText("");
        txtPrincipal.setText("");
        txtProducto.setSelectedIndex(0);      
    }
    
    
    
    private void guardarAImgProMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarAImgProMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_guardarAImgProMouseEntered

    private void cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cargarActionPerformed
    File fichero;
    private void cargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cargarMouseClicked
        int resultado;

        cargarFoto ventana = new cargarFoto();

        FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG y PNG", "jpg", "png");

        Vistas.ImagenesProducto.cargarFoto.jfchCargarfoto.setFileFilter(filtro);

        resultado = ventana.jfchCargarfoto.showOpenDialog(null);

        if (JFileChooser.APPROVE_OPTION == resultado) {

            fichero = ventana.jfchCargarfoto.getSelectedFile();

            try {

                ImageIcon icon = new ImageIcon(fichero.toString());

                Icon icono = new ImageIcon(icon.getImage().getScaledInstance(labImagen.getWidth(),
                        labImagen.getHeight(), Image.SCALE_DEFAULT));

                labImagen.setText(null);

                labImagen.setIcon(icono);

            } catch (Exception ex) {

                JOptionPane.showMessageDialog(null, "Error abriendo la                   imagen " + ex);

            }
        }
    }//GEN-LAST:event_cargarMouseClicked

    private void txtPrincipalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrincipalKeyPressed
        if ( txtPrincipal.getText().length()==1) {
                JOptionPane.showMessageDialog(this, "Ingrese sÃ³lo un carÃ¡cter.", "Error", JOptionPane.ERROR_MESSAGE);
                txtPrincipal.requestFocus();
                evt.consume();
            
            }
    }//GEN-LAST:event_txtPrincipalKeyPressed

    private void txtNombImagenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombImagenKeyPressed
        if (txtNombImagen.getText().length()==100) {
                JOptionPane.showMessageDialog(this, "Ingrese menos de 100 carÃ¡cteres", "Error", JOptionPane.ERROR_MESSAGE);
                txtNombImagen.requestFocus();
                evt.consume();
            
            }
    }//GEN-LAST:event_txtNombImagenKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cancelarAImgPro;
    private javax.swing.JButton cargar;
    private javax.swing.JLabel estatusUEmp;
    private javax.swing.JLabel guardarAImgPro;
    private javax.swing.JLabel labImagen;
    private javax.swing.JLabel nombreUEmp;
    private javax.swing.JPanel opcionesAEmp;
    private javax.swing.JLabel origenUEmp;
    private javax.swing.JLabel origenUEmp1;
    private javax.swing.JTextField txtNombImagen;
    private javax.swing.JTextField txtPrincipal;
    private javax.swing.JComboBox<String> txtProducto;
    // End of variables declaration//GEN-END:variables

}
