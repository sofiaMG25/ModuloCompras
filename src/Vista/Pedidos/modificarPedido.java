/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista.Pedidos;

import DAOs.DAOPedidosImp;
import DAOs.DAOProveedoresImp;
import DAOs.DAOSucursalesImp;
import DAOs.Pedidos;
import DAOs.Proveedores;
import DAOs.Sucursales;
import MainPrincipal.Main;
import java.awt.BorderLayout;
import java.util.Date;
import java.util.LinkedList;
import java.util.StringTokenizer;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author 52351
 */
public class modificarPedido extends javax.swing.JPanel {

    /**
     * Creates new form modificarLaboratorio
     */
    public modificarPedido() {
        initComponents();
        activarComboxs();
    }

    private Main mainPrincipal;

    public void setMainPrincipal(Main main) {
        mainPrincipal = main;
    }

    private void activarComboxs() {
        // carga de datos 
        LinkedList<Proveedores> proveedor = new DAOProveedoresImp().obtenerProveedores();
        LinkedList<Sucursales> sucursal = new DAOSucursalesImp().obtenerSucursales();
        LinkedList<String> Empleados = new DAOPedidosImp().obtenerEmpleados();
        //Implementar en los JBOX
        DefaultComboBoxModel modelProveedor = (DefaultComboBoxModel) this.proveCBox1.getModel();
        for (Proveedores proveedores : proveedor) {
            modelProveedor.addElement(proveedores.getNombre());
        }

        DefaultComboBoxModel modelSucursal = (DefaultComboBoxModel) this.suscuCBox2.getModel();
        for (Sucursales sucursales : sucursal) {
            modelSucursal.addElement(sucursales.getNombre());
        }

        DefaultComboBoxModel modelEmpleado = (DefaultComboBoxModel) this.empleadCBox3.getModel();
        for (String empleados : Empleados) {
            modelEmpleado.addElement(empleados);
        }

        this.proveCBox1.setModel(modelProveedor);
        this.suscuCBox2.setModel(modelSucursal);
        this.empleadCBox3.setModel(modelEmpleado);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idtxPe = new javax.swing.JTextField();
        id = new javax.swing.JLabel();
        estatusCBox = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        modificarPe = new javax.swing.JLabel();
        cancelarPe = new javax.swing.JLabel();
        fechReg = new javax.swing.JLabel();
        fechaRecp = new javax.swing.JLabel();
        cantPag = new javax.swing.JLabel();
        totPag = new javax.swing.JLabel();
        estatus = new javax.swing.JLabel();
        prov = new javax.swing.JLabel();
        susc = new javax.swing.JLabel();
        emp = new javax.swing.JLabel();
        totPagtxt = new javax.swing.JTextField();
        cantPatxt = new javax.swing.JTextField();
        proveCBox1 = new javax.swing.JComboBox<>();
        suscuCBox2 = new javax.swing.JComboBox<>();
        empleadCBox3 = new javax.swing.JComboBox<>();
        fechaRegistro = new com.toedter.calendar.JDateChooser();
        fechaRepcion = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(228, 225, 225));
        setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 2, true), "Modicar Laboratorio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 1, 14), new java.awt.Color(102, 102, 102))); // NOI18N

        idtxPe.setEnabled(false);
        idtxPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idtxPeActionPerformed(evt);
            }
        });

        id.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        id.setText("ID:");

        estatusCBox.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        estatusCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE UNA OPCIÓN", "ACTIVO", "INACTIVO" }));

        jPanel1.setBackground(new java.awt.Color(48, 45, 45));

        modificarPe.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 2, 18)); // NOI18N
        modificarPe.setForeground(new java.awt.Color(255, 255, 255));
        modificarPe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save.png"))); // NOI18N
        modificarPe.setText("MODIFICAR");
        modificarPe.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        modificarPe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modificarPe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modificarPeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                modificarPeMouseEntered(evt);
            }
        });

        cancelarPe.setFont(new java.awt.Font("Tw Cen MT Condensed Extra Bold", 2, 18)); // NOI18N
        cancelarPe.setForeground(new java.awt.Color(255, 255, 255));
        cancelarPe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cerrar.png"))); // NOI18N
        cancelarPe.setText("CANCELAR");
        cancelarPe.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        cancelarPe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelarPe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelarPeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(modificarPe, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 360, Short.MAX_VALUE)
                .addComponent(cancelarPe, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarPe)
                    .addComponent(modificarPe))
                .addGap(45, 45, 45))
        );

        fechReg.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        fechReg.setText("FECHA REGISTRO:");

        fechaRecp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        fechaRecp.setText("FECHA RECEPCIÓN:");

        cantPag.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cantPag.setText("CANTIDAD PAGADA:");

        totPag.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        totPag.setText("TOTAL A PAGAR:");

        estatus.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        estatus.setText("ESTATUS:");

        prov.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        prov.setText("PROVEEDOR:");

        susc.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        susc.setText("SUCURSAL:");

        emp.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        emp.setText("EMPLEADO:");

        proveCBox1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        proveCBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE UNA OPCIÓN" }));

        suscuCBox2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        suscuCBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE UNA OPCIÓN" }));

        empleadCBox3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        empleadCBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONE UNA OPCIÓN" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fechaRecp)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emp)
                            .addComponent(susc))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(id)
                            .addComponent(fechReg)
                            .addComponent(prov))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(200, 200, 200)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(suscuCBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(proveCBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(empleadCBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fechaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idtxPe, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fechaRepcion, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(194, 194, 194))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(estatus)
                            .addComponent(totPag)
                            .addComponent(cantPag))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(estatusCBox, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totPagtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cantPatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(140, 140, 140))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(id)
                            .addComponent(idtxPe, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fechReg))
                    .addComponent(fechaRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fechaRecp)
                    .addComponent(fechaRepcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totPag)
                    .addComponent(totPagtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cantPag)
                    .addComponent(cantPatxt, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(estatus)
                    .addComponent(estatusCBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prov)
                    .addComponent(proveCBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(susc)
                    .addComponent(suscuCBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emp)
                    .addComponent(empleadCBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("Modificar Laboratorio");
        getAccessibleContext().setAccessibleDescription("");
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Método que tiene como función retornar a la ventana MostrarLaboratorios
     *
     * @param evt evento que se activa al dar click
     */
    private void cancelarPeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarPeMouseClicked
        mainPrincipal.getworkSpace().removeAll();
        mostrarPedidos mostrarLab = new mostrarPedidos();
        mostrarLab.setSize(mainPrincipal.getworkSpace().getSize());
        mostrarLab.setVisible(true);
        mostrarLab.MostrarDatosPedidos();
        mainPrincipal.getworkSpace().add(mostrarLab, BorderLayout.CENTER);
        mainPrincipal.getworkSpace().revalidate();
        mainPrincipal.getworkSpace().repaint();
        mostrarLab.setMostrarPedidos(mainPrincipal);
    }//GEN-LAST:event_cancelarPeMouseClicked

    /**
     * Método que funciona para guardar los datos modificados
     *
     * @param evt evento al dar click
     */
    private void modificarPeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modificarPeMouseClicked
        if (fechaRegistro.getCalendar() == null) {
            JOptionPane.showMessageDialog(this, "Ingresa un fecha de registro valida", "ERROR", JOptionPane.ERROR_MESSAGE);
            fechaRegistro.requestFocus();
            return;
        } else if (fechaRepcion.getCalendar() == null) {
            JOptionPane.showMessageDialog(this, "Ingresa un fecha de recpcion valida", "ERROR", JOptionPane.ERROR_MESSAGE);
            fechaRepcion.requestFocus();
            return;
        } else if (fechaRepcion.getCalendar().compareTo(fechaRegistro.getCalendar()) <= 0) {
            JOptionPane.showMessageDialog(this, "La fecha de recepcion tiene que ser mayor\n a la fecha de registro", "ERROR", JOptionPane.ERROR_MESSAGE);
            fechaRepcion.requestFocus();
            return;
        } else if (!totPagtxt.getText().equals("")) {
            try {
                if (Float.parseFloat(totPagtxt.getText()) <= 0) {
                    JOptionPane.showMessageDialog(this, "Total a solo puede ser mayor a cero",
                            "ERROR", JOptionPane.ERROR_MESSAGE);
                    totPagtxt.requestFocus();
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Solo numeros!!",
                        "ERROR", JOptionPane.ERROR_MESSAGE);
                totPagtxt.requestFocus();
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad a total a pagar",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            totPagtxt.requestFocus();
            return;
        }

        if (!cantPatxt.getText().equals("")) {
            try {
                if (Float.parseFloat(cantPatxt.getText()) <= 0) {
                    JOptionPane.showMessageDialog(this, "Total a solo puede ser mayor a cero",
                            "ERROR", JOptionPane.ERROR_MESSAGE);
                    cantPatxt.requestFocus();
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Solo numeros!!",
                        "ERROR", JOptionPane.ERROR_MESSAGE);
                cantPatxt.requestFocus();
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad a total a pagar",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            cantPatxt.requestFocus();
            return;
        }

        if (estatusCBox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Seleccione un estado",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            estatusCBox.requestFocus();
            return;
        }

        if (proveCBox1.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Seleccione un proveedor",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            proveCBox1.requestFocus();
            return;
        } else if (suscuCBox2.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Seleccione una sucursal",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            suscuCBox2.requestFocus();
        } else if (empleadCBox3.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Seleccione un empleado",
                    "ERROR", JOptionPane.ERROR_MESSAGE);
            empleadCBox3.requestFocus();
            return;
        } else {
            StringTokenizer token = new StringTokenizer(empleadCBox3.getSelectedItem().toString(), " ");
            String nombreEmpleado = "";
            int i = 0;
            if (token.countTokens() == 4) {
                while (token.hasMoreTokens()) {
                    if (i == 2) {
                        break;
                    }
                    nombreEmpleado += token.nextToken();
                    i++;
                }
            } else {
                while (token.hasMoreTokens()) {
                    nombreEmpleado += token.nextToken();
                    break;
                }
            }
            new DAOPedidosImp().upadate
            (new Pedidos(
             Integer.parseInt(idtxPe.getText()), 
             fechaRegistro.getDate(), 
             fechaRepcion.getDate(), 
             Float.parseFloat(totPagtxt.getText()), 
             Float.parseFloat(cantPatxt.getText()), 
             estatusCBox.getSelectedItem().toString().charAt(0), 
             proveCBox1.getSelectedItem().toString(), 
             suscuCBox2.getSelectedItem().toString(), 
             nombreEmpleado));

            LimpiarVariables();
        }


    }//GEN-LAST:event_modificarPeMouseClicked

    private void LimpiarVariables() {
        fechaRegistro.setCalendar(null);
        fechaRepcion.setCalendar(null);
        totPagtxt.setText("");
        cantPatxt.setText("");
        estatusCBox.setSelectedIndex(0);
        proveCBox1.setSelectedIndex(0);
        suscuCBox2.setSelectedIndex(0);
        empleadCBox3.setSelectedIndex(0);
    }

    private void modificarPeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modificarPeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_modificarPeMouseEntered

    private void idtxPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idtxPeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idtxPeActionPerformed

    /**
     * Método que funciona para abstraer los datos del laboratotio
     */
    public void ObtenerDatosPedido(Pedidos pedido) {
        idtxPe.setText("" + pedido.getIdpedido());
        fechaRegistro.setDate(new Date(pedido.getFecharegistro().getTime()));
        fechaRepcion.setDate(new Date(pedido.getFechaRecepcion().getTime()));
        totPagtxt.setText("" + pedido.getTotalpagar());
        cantPatxt.setText("" + pedido.getCantidadpagada());
        if (pedido.getEstatus() == 'A') {
            estatusCBox.setSelectedIndex(1);
        } else {
            estatusCBox.setSelectedIndex(2);
        }

        for (int i = 1; i < proveCBox1.getModel().getSize(); i++) {
            proveCBox1.setSelectedIndex(i);
            if (pedido.getIdproveedor().equals(proveCBox1.getSelectedItem().toString())) {
                break;
            }
        }

        for (int i = 1; i < suscuCBox2.getModel().getSize(); i++) {
            suscuCBox2.setSelectedIndex(i);
            if (pedido.getIdproveedor().equals(suscuCBox2.getSelectedItem().toString())) {
                break;
            }
        }

        for (int i = 1; i < empleadCBox3.getModel().getSize(); i++) {
            empleadCBox3.setSelectedIndex(i);
            if (pedido.getIdproveedor().equals(empleadCBox3.getSelectedItem().toString())) {
                break;
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cancelarPe;
    private javax.swing.JLabel cantPag;
    private javax.swing.JTextField cantPatxt;
    private javax.swing.JLabel emp;
    private javax.swing.JComboBox<String> empleadCBox3;
    private javax.swing.JLabel estatus;
    private javax.swing.JComboBox<String> estatusCBox;
    private javax.swing.JLabel fechReg;
    private javax.swing.JLabel fechaRecp;
    private com.toedter.calendar.JDateChooser fechaRegistro;
    private com.toedter.calendar.JDateChooser fechaRepcion;
    private javax.swing.JLabel id;
    private javax.swing.JTextField idtxPe;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel modificarPe;
    private javax.swing.JLabel prov;
    private javax.swing.JComboBox<String> proveCBox1;
    private javax.swing.JLabel susc;
    private javax.swing.JComboBox<String> suscuCBox2;
    private javax.swing.JLabel totPag;
    private javax.swing.JTextField totPagtxt;
    // End of variables declaration//GEN-END:variables
}
